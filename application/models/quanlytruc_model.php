<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');/* * send mail via gmail * */class quanlytruc_model extends CI_Model{	//public $fromdate;	//public $todate;	function __construct()    {        parent::__construct();        //$this->load->library(array('database'));        $this->load->database();    }		public function testOracleDB()    {		$query = "			select ID, to_char(MOC,'HH:MI:SS') as DATETIME, TIME_MAX, TIME_MIN from SOLIEU";		$result = $this->db->query($query);		$result = $result->result_array();		//print_r($result);		return $result;    }		public function login($username, $password)	{		$this->db->select('*');		$this->db->from('tbl_qlt_user');		$this->db->where('username', $username);		$this->db->where('password', $password);		//$this->db->limit(1);				$query = $this->db->get();				$result = $query->result_array();		if(isset($result[0]['USERNAME']) && $result[0]['USERNAME'] != '')			return $result[0];		return false;	}		public function getServices()	{		$this->db->select('*');		$this->db->from('tbl_qlt_dichvu');		//$this->db->where('username', $username);		//$this->db->where('password', $password);		//$this->db->limit(1);				$query = $this->db->get();				$result = $query->result_array();		//var_dump($result);		return $result;			}		public function getUsers()	{		$this->db->select('username');		$this->db->from('tbl_qlt_user');		//$this->db->where('username', $username);		//$this->db->where('password', $password);		//$this->db->limit(1);				$query = $this->db->get();				$result = $query->result_array();		//var_dump($result);		return $result;	}		public function getTotalHours($from, $to, $servicename, $user)	{		if($servicename == "ALL_SERVICES")		{			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')			and username = '" . $user . "'";		} else {			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')			and username = '" . $user . "'			and service_name = '" . $servicename . "'";		}		$this->db->select('sum(tbl_qlt_baocao.solution_time) as TOTAL_HOURS');		$this->db->from('tbl_qlt_baocao');		$this->db->where($where);				$query = $this->db->get();				$result = $query->result_array();		//var_dump($where);		return $result;	}		public function getDetailReport($from, $to, $servicename, $user)	{		if(($servicename == "ALL_SERVICES") && ($user != "ALL_USERS"))		{			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')			and username = '" . $user . "'";		} elseif(($servicename != "ALL_SERVICES") && ($user == "ALL_USERS"))		{			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')			and service_name = '" . $servicename . "'";		} elseif(($servicename == "ALL_SERVICES") && ($user == "ALL_USERS")) 		{			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')";		}elseif(($servicename != "ALL_SERVICES") && ($user != "ALL_USERS")) {			$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS')			and username = '" . $user . "'			and service_name = '" . $servicename . "'";		}		$this->db->select('ID,SERVICE_NAME,ERROR_CODE,ERROR_DESC,SOLUTION_DESC,to_char(ERROR_TIME,\'YYYY/MM/DD HH24:MI:SS\') as ERROR_TIME,SOLUTION_TIME,USERNAME,STATUS');		$this->db->from('tbl_qlt_baocao');		$this->db->where($where);				$query = $this->db->get();				$result = $query->result_array();		//var_dump($where);		return $result;	}		public function addBaocao($data2insert,$error_time)	{		//var_dump($data2insert);		/*FALSE se dam bao cau lenh duoc thuc thi chuan ma khong bi coi la chuoi*/		$this->db->set('ID','qlt_baocao_seq.nextval',FALSE);		$this->db->set('error_time','to_date('."'".$error_time."','MM/DD/YYYY HH24:MI:SS'".')',FALSE);		$this->db->insert('tbl_qlt_baocao',$data2insert,TRUE);		//$result = $this->db->query($query);	}		public function addUser($data2insert)	{		$this->db->insert('tbl_qlt_user',$data2insert,TRUE);	}		public function getExportData($from, $to)	{		//PENDING-ACCEPTED		$where = "error_time >= to_date('" . $from . "','MM/DD/YYYY HH24:MI:SS')			and error_time <= to_date('" . $to . "','MM/DD/YYYY HH24:MI:SS') and status = 'ACCEPTED'";					$this->db->select('sum(solution_time) as TOTAL_TIME,service_name, username');		$this->db->from('tbl_qlt_baocao');		$this->db->where($where);		$this->db->group_by(array('service_name', 'username')); 		$this->db->order_by('service_name', 'desc'); 				$query = $this->db->get();				$result = $query->result_array();		//var_dump($where);		return $result; 	}		public function updateStatus($id, $status){		$this->db->where('id', $id);		$this->db->update('tbl_qlt_baocao', array('status'=>$status)); 	}		}